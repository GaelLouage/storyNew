@using Infrastructuur.EnumsAndStaticProps
@using Infrastructuur.Models
@model Infrastructuur.Models.UserEntity

@{
    ViewData["Title"] = "Details";
    var currentUser = ViewData["User"] as UserEntity;
    var storiesSelectedByUser = ViewData["storiesSelectedByUser"] as List<StoryzonEntity>;
    var horrorsUserWatched = storiesSelectedByUser.Where(x => x.Genre == Genre.Horror).Count();
    var actionUserWatched = storiesSelectedByUser.Where(x => x.Genre == Genre.Action).Count();
    var adventureUserWatched = storiesSelectedByUser.Where(x => x.Genre == Genre.Adventure).Count();
    <script src="https://www.gstatic.com/charts/loader.js"></script>
}

<div class="container pt-5 pb-5">
    <div class="pt-5 pb-5">

        @if (currentUser.Id == @Model.Id)
        {
            <h4 class="pt-5 pb-5">Welcome @Model.UserName</h4>
            <hr />
            <dl class="row">

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.UserName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.UserName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.FirstName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.FirstName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.LastName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
            </dl>
        }
    </div>
    <div class="pb-5 pt-5">
        @if (currentUser.Role == Role.Admin && Model.Role == Role.SuperAdmin)
        {
            <div class="alert alert-danger" role="alert">
                You cannot edit a superAdmin as administrator. Ask authorization to superAdmin @Model.UserName for permission.
            </div>
        }
        else
        {
            @Html.ActionLink("Edit", "Edit", new {  id = Model.Id  }, new { @class="btn bg-dark text-white"})
        }

    </div>

    @if (User.IsInRole(Role.SuperAdmin) || User.IsInRole(Role.Admin))
    {

        <div class="contact-us container pt-5">
            <div class="table-responsive">
                <div class="table-wrapper">
                    <div class="table-title">
                        <div class="row">
                            <div class="col-xs-5 mb-5">
                                <h2>Stories Selected By @Model.UserName <b>Management</b></h2>
                            </div>

                        </div>
                    </div>
                    @*  <div class="top-buttons">
                <a asp-action="Create" class="btn bg-dark text-white pl-2 w-25"><i class="material-icons bg-dark text-white">&#xE147;</i> <span>Add New User</span></a>
                <form asp-action="WriteToExcel" class="excell-button" method="post">
                <button type="Submit" class="btn bg-dark text-white w-25"><i class="material-icons">&#xE24D;</i> <span>Export to Excel</span></button>
                </form>
                </div>*@

                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>StoryTitle</th>
                                <th>StoryGenre</th>
                                <th>Role</th>
                                <th>User times selected</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var story in @storiesSelectedByUser.GroupBy(x => x.Title))
                            {
                                <tr>
                                    <td>@story.Key</td>
                                    <td>@story.FirstOrDefault().Genre</td>
                                    <td>@Model.Role</td>
                                    <td>@story.Count()</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
        <div id="myChart" style="max-width:700px; height:400px"></div>
    }
</div>

<script>
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Contry', 'Mhl'],
            ['Action', @actionUserWatched],
            ['Horror', @horrorsUserWatched],
            ['Adventure', @adventureUserWatched]
        ]);

        var options = {
            title: 'User watched stories ',
            is3D: true
        };

        var chart = new google.visualization.PieChart(document.getElementById('myChart'));
        chart.draw(data, options);
    }
</script>